	prices = [1178.53, 1183.44, 1180.7, 1184.79, 1203.73, 1217.6, 1226.94, 1255.4, 1257.13, 1244.37, 1248.22, 1248.32, 1263.54, 1284.84, 1329.19, 1320.05, 1327.04, 1347.96, 1402.08, 1443.68, 1492, 1515.63, 1512.21, 1548.29, 1555.47, 1639.32, 1706.93, 1756.8, 1807.37, 1676.99, 1759.96, 1772.42, 1697.38, 1718.2, 1802.16, 1887.33, 1968.1, 2051.73, 2055.62, 2139.03, 2291.48, 2476.3, 2357.5, 2247.48, 2106.31, 2207.58, 2289.87, 2197.23, 2330.23, 2452.18, 2517.41, 2555.65, 2552.81, 2736.59, 2914.08, 2694.22, 2825.03, 2826.7, 2942.34, 3018.54, 2682.59, 2738.93, 2494.48, 2456.92, 2528.1, 2664, 2576.17, 2641.66, 2778.83, 2712.16, 2740.79, 2738.22, 2619.12, 2594.45, 2485.36, 2593.17, 2584.56, 2561.56, 2499.98, 2460.2, 2529.78, 2581.07, 2625.07, 2629.27, 2619.11, 2521.24, 2579.93, 2525.67, 2371.96, 2332.19, 2423.16, 2364.52, 2232.65, 1993.26, 1938.94, 2244.26, 2327.9, 2294.4, 2877.39, 2694.29, 2838.81, 2762.63, 2779.04, 2591.22, 2550.18, 2697.47, 2805.18, 2720.08, 2746.33, 2873.83, 2735.59, 2723.58, 2814.36, 2883.68, 3301.76, 3255, 3431.97, 3453.16, 3377.54, 3445.28, 3679.61, 3917.65, 4111.2, 4382.74, 4204.43, 4425.3, 4316.34, 4159.46, 4206.13, 4111.22, 4054.94, 4137.67, 4191.22, 4362.47, 4408.32, 4387.46, 4394.51, 4439.66, 4648.13, 4630.73, 4764.87, 4950.72, 4643.97, 4631.69, 4319.72, 4422.12, 4626.72, 4638.1, 4317.54, 4291.88, 4191.17, 4188.84, 4148.27, 3874.26, 3226.41, 3686.9, 3678.74, 3672.57, 4067.08, 3897, 3858.09, 3612.68, 3603.31, 3777.29, 3662.12, 3927.5, 3895.51, 4208.56, 4185.29, 4164.1, 4353.05, 4394.64, 4404.1, 4320.09, 4225.92, 4322.75, 4370.24, 4437.03, 4596.96, 4772.97, 4754.7, 4830.77, 5439.13, 5640.13, 5809.69, 5697.39, 5754.22, 5595.23, 5572.2, 5699.58, 5984.09, 6013.23, 5984.96, 5895.3, 5518.85, 5733.9, 5888.14, 5767.68, 5732.82, 6140.53, 6121.8, 6447.67, 6750.17, 7030, 7161.45, 7387, 7382.45, 6958.21, 7118.8, 7458.79, 7146.78, 6570.31, 6337, 5857.32, 6517.68, 6598.77, 7279, 7843.94, 7689.91, 7776.94, 8033.94, 8238.2, 8095.59, 8230.69, 8002.64, 8201.46, 8763.78, 9326.59, 9739.05, 9908.23, 9816.35, 9916.54, 10859.56, 10895.01, 11180.89, 11616.85, 11696.06, 13708.99, 16858.02, 16057.14, 14913.4, 15036.96, 16699.68, 17178.1, 16407.2, 16531.08, 17601.94, 19343.04, 19086.64, 18960.52, 17608.35, 16454.72, 15561.05, 13857.14, 14548.71, 13975.44, 13917.03, 15745.26, 15378.28, 14428.76, 14427.87, 12629.81, 13860.14, 13412.44, 14740.76, 15134.65, 15155.23, 16937.17, 17135.84, 16178.49, 14970.36, 14439.47, 14890.72, 13287.26, 13812.71, 14188.78, 13619.03, 13585.9, 11348.02, 11141.25, 11250.65, 11514.92, 12759.64, 11522.86, 10772.15, 10839.83, 11399.52, 11137.24, 11090.06, 11407.15, 11694.47, 11158.39, 10035, 10166.51, 9052.58, 8827.63, 9224.39, 8186.65, 6914.26, 7700.39, 7581.8, 8237.24, 8689.84, 8556.61, 8070.8, 8891.21, 8516.24, 9477.84, 10016.49, 10178.71, 11092.15, 10396.63, 11159.72, 11228.24, 10456.17, 9830.43, 10149.46, 9682.38, 9586.46, 10313.08, 10564.42, 10309.64, 10907.59, 11019.52, 11438.65, 11479.73, 11432.98, 10709.53, 9906.8, 9299.28, 9237.05, 8787.16, 9532.74, 9118.27, 9144.15, 8196.9, 8256.99, 8269.33, 7862.11, 8196.02, 8594.19, 8915.9, 8895.4, 8712.89, 8918.74, 8535.89, 8449.83, 8138.34, 7790.16, 7937.2, 7086.49, 6844.32, 6926.02, 6816.74, 7049.79, 7417.89, 6789.3, 6774.75, 6620.41, 6896.28, 7022.71, 6773.94, 6830.9, 6939.55, 7916.37, 8055.11];


	variablesRunsSet = {
		0:{x0:1, y:4},
		1:{x0:2, y:7},
		2:{x0:3, y:12},
	};
	var sqrtVariables = [[],[],[]];
	for(var i =0;i<20;i++){
		for(var j = 0;j<20;j++){
			sqrtVariables[0].push(i);
			sqrtVariables[1].push(j);
			sqrtVariables[2].push(Math.sqrt(Math.pow(i,2)+Math.pow(j,2)));
		}
	}
	possibleVariables = [
		{
			name: 'y=x<sub>0</sub><sup>2</sup>',
			description: 'Variable al cuadrado',
			variables: [
				[0,1,4,9,16,25,36]
			]
		},
		{
			name: 'y=3(x<sub>0</sub>+1)',
			description: 'suma y multiplicaci√≥n de una variable',
			variables: [
				[3,6,9]
			]
		},
		{
			name: 'y=(x<sub>0</sub>+2)<sup>3</sup>',
			description: 'suma y cubo',
			variables: [
				[8,27,64,125]
			]
		},
		
		{
			name: 'y=x<sub>0</sub>+x<sub>1</sub>',
			description: 'suma de dos variables',
			variables: [
				[1,1,2,2,3,3],
				[1,2,2,3,3,4],
				[2,3,4,5,6,7]
			]
		},
		{
			name: 'y=x<sub>0</sub><sup>2</sup>+x<sub>1</sub><sup>2</sup>',
			description: 'suma de los cuadrados de dos variables',
			variables: [
				[1,1,2,2,3,3],
				[1,2,2,3,3,4],
				[2,5,8,13,18,25]
			]
		},
		{
			name: 'y=(x<sub>0</sub><sup>2</sup>+x<sub>1</sub><sup>2</sup>)<sup>0.5</sup>',
			description: 'circulo',
			variables: sqrtVariables/*[
				[1,1,2,2,4,3,5,8,6,10],
				[1,2,1,2,3,4,5,6,8,10],
				["sqrt(2)","sqrt(5)","sqrt(5)","sqrt(8)",5,5,"sqrt(50)",10,10,"sqrt(200)"]
			]*/
		},
		{
			name: 'Precio de bitcoin de 2017',
			description: 'El precio diario de bitcoin desde 2017 hasta junio de 2018',
			variables: [
				prices
			]
		}
	
	];

	function transformToRunsSet(variables){
		runsSet = {};
		for(var i = 0; i < variables[0].length;i++){
			variableRunSet = {};
			for(var j = 0; j<variables.length-1;j++){
				variableRunSet['x'+j] = math.eval(variables[j][i]);
			}
			if(variables.length == 1){

				variableRunSet['x0'] = i;
					
			}
			variableRunSet.y = math.eval(variables[variables.length-1][i]);
			runsSet[i] = variableRunSet;
		}
		return runsSet;
	}